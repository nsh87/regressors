# This file was autogenerated and will overwrite each time you run travis_pypi_setup.py
language: python
python:
  - "2.6"
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
  - "pypy"
  - "pypy3"
matrix:
  include:
    - python: 2.7
      env: TESTENV=docs
  exclue:
    - python: 2.6
    - python: 3.3
    - python: 3.4
    - python: 3.5
addons:
  apt:
    packages:
    - texlive-latex-recommended
    - texlive-fonts-recommended
    - texlive-latex-extra
    - dvipng
install:
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  - if [[ "$TRAVIS_PYTHON_VERSION" == "pypy" ]]; then
      conda create -q -n test-environment python=2.7 numpy scipy matplotlib pandas;
    elif [[ "$TRAVIS_PYTHON_VERSION" == "pypy3" ]]; then
      conda create -q -n test-environment python=3.5 numpy scipy matplotlib pandas;
    else
      conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION numpy scipy matplotlib pandas;
    fi
  - source activate test-environment
  - pip install -U pip
  - pip install -U wheel
  - pip install -U scikit-learn seaborn unittest2 coverage sphinx sphinx_rtd_theme tox
  - python setup.py install;
script:
  - if [[ "$TESTENV" != "docs" ]]; then
      python setup.py test;
    else
      cd docs && sphinx-build -W -T -b html . ../html;
    fi
deploy:
  true:
    condition: $TRAVIS_PYTHON_VERSION == "2.7"
    repo: nsh87/regressors
    tags: true
  distributions: sdist bdist_wheel
  password:
    secure: JDqyJ3K+mWe3Iok8fb1uvogTYxx5aS+0n2pil8RmEA+yjnlVJaZP3s2SyjWZM07s6AhSN3C8ydN6HcnMnWmKgBpaCNFZag18bUoGdszE116ECTuYsp2DiR7XcVkT3Dznrdx4+B6D/Sa/AZRvksD4/VL6Xpm+swY41sOR6PcAsSAB3Oj8LyHx46voCmqOK41KN0l9Apq6/DI2bJxp+UB81onCxQqUSV7cbcvCxS3Ft5VuF/jvNC712WGrOho5l9ex02w3v+cCfVWNmZqNFkqjM9d+qem0LSP25BXFW0r1JMWKkQxZIQ5cd9l+YWOxPHBdOjsTQ7P5lI6190zEQEHs7hoxHTsRQlAJfs6R3paZ0SGXL8hpTiDdxriRkTOW9gX/3BxoT0Gsl25L9VDAiO0GhRLr/xEA3XnqGpaRpQvMPzn09pWRlSrHrteoxwBU8bW12KWlnXRtynVuELpj7tiL6bACcE3GbcWENkSG2xH/EoQ91qeSeKtj+jE8nDEcXeXF0b2fXmeqUNOny7wyFXYGuGgWYhQwGgIdM9TxsazseK0kk85pbZcU7rnpcSk6g1Zu8Mzjp9z/6fq93RgBlqg/o+b6uSt/u/UmFzeKORf5Fy0G+quipdnaaMm3xQKw5bJRuUH/e6TXvydST00PVDn/AqXQV4Cv8XY4ChmBUqf9dfA=
  provider: pypi
  user: nikhilhaas
branches:
  only:
    - master
    - dev
